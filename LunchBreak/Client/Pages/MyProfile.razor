@page "/profile/edit"
@inject IHttpRequest HttpRequest
@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage

<section>
    <div class="container-fluid">
        <div class="row mb-5">
            <div class="col col-xl-10 col-lg-9 col-md-8 ml-auto">
                <div class="row align-items-center">
                    <div class="col-xl-12 col-12">
                        <div class="row my-2 pt-md-5 mt-md-3">
                            <div class="col">
                                <h2>My Profile</h2>
                            </div>
                        </div>
                        <div class="row justify-content-center">
                            <div class="col-6">
                                @if (user == null)
                                {
                                    <h4 class="text-center">Loading...</h4>
                                }
                                else
                                {
                                    <EditForm Model="@user" OnValidSubmit="@HandleValidSubmit">
                                        <div class="form-group">
                                            <label for="name">Name:</label>
                                            <InputText type="text" class="form-control" id="name" @bind-Value="user.Name" />
                                        </div>
                                        <div class="form-group">
                                            <label for="email">Email address:</label>
                                            <InputText type="email" class="form-control" id="email" @bind-Value="user.Email" />
                                        </div>
                                        <div class="form-group">
                                            <label for="username">Username:</label>
                                            <InputText type="text" class="form-control" id="username" @bind-Value="user.Username" />
                                        </div>
                                        <div class="form-group">
                                            <label for="pwd">Password:</label>
                                            <InputText type="password" class="form-control" id="pwd" @bind-Value="user.Password" />
                                        </div>
                                        <div class="form-group">
                                            <label for="pwdRpt">Repeat Password:</label>
                                            <InputText type="password" class="form-control" id="pwdRpt" @bind-Value="user.ConfirmPassword" />
                                        </div>
                                        <div class="text-danger">
                                            <DataAnnotationsValidator />
                                            <ValidationSummary />
                                        </div>
                                        <div class="text-center font-weight-bold ">
                                            <button type="button" class="btn btn-secondary">Cancel</button>
                                            <button type="submit" class="btn btn-primary">Update Profile</button>
                                        </div>
                                    </EditForm>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    string registerError = "";

    private UserRegisterDTO user;

    protected override async Task OnInitializedAsync()
    {

        var userId = await localStorage.GetItemAsync<string>("lunchBreakId");
        Console.WriteLine(userId);
        var response = await HttpRequest.HttpGet<GetUser>($"api/users/user/{userId}");

        if (response.Successful)
        {
            user = response.User;
        }
        else
        {
            registerError = response.Error;
        }
    }

    private async void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
        var response = await HttpRequest.HttpPut<OperationSuccessResponse>("api/users/", user);
        Console.WriteLine(response.Successful);
        if (response.Successful)
        {
            Console.WriteLine("Hello");
        }
        else
        {
            registerError = response.Error;
        }

    }

    private void GoToDashboard()
    {
        NavigationManager.NavigateTo("/");
    }
}
