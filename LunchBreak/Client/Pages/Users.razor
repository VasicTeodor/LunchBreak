@page "/users"
@inject IHttpRequest HttpRequest
@inject NavigationManager NavigationManager

<section>
    <div class="container-fluid">
        <div class="row mb-5">
            <div class="col col-xl-10 col-lg-9 col-md-8 ml-auto">
                <div class="row align-items-center">
                    <div class="col-xl-12 col-12">
                        <div class="row my-2 pt-md-5 mt-md-3">
                            <div class="col">
                                <h2>All Users</h2>
                            </div>
                        </div>
                        <div class="row align-items-center">
                            <div class="col-xl-12 col-12">
                                <h3 class="text-muted text-center mb-3">List of users</h3>
                                @if (users == null)
                                {
                                    <h4 class="text-center">Loading...</h4>
                                }
                                else
                                {
                                    <table class="table table-dark table-hover text-center">
                                        <thead>
                                            <tr class="text-muted">
                                                <th>Name</th>
                                                <th>Username</th>
                                                <th>Email</th>
                                                <th></th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var user in users)
                                            {
                                                <tr>
                                                    <th>@user.Name</th>
                                                    <td>@user.Username</td>
                                                    <td>@user.Email</td>
                                                    <td class="p-1">
                                                        <i class="fas fa-times fa-2x text-danger" style="cursor: pointer" @onclick="@(async () => await RemoveUser(user.Id))"></i>
                                                    </td>
                                                    <td class="p-1">
                                                        <i class="fas fa-search-plus fa-2x text-primary" style="cursor: pointer" @onclick="@(() => UserDetails(user.Id))"></i>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <!-- pagination -->
                                    <nav>
                                        <ul class="pagination justify-content-center">
                                            <li class="page-item">
                                                <a href="#" class="page-link py-2 px-3">
                                                    <span>Previous</span>
                                                </a>
                                            </li>
                                            <li class="page-item">
                                                <a href="#" class="page-link py-2 px-3">
                                                    <span>Next</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </nav>
                                    <!-- end of pagination -->
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private List<UserRegisterDTO> users;
    private string error = "";

    protected override async Task OnInitializedAsync()
    {
        var response = await HttpRequest.HttpGet<GetUsers>("api/users/allusers");

        if (response.Successful)
        {
            users = response.Users;
        }
        else
        {
            error = response.Error;
        }
    }

    private async Task RemoveUser(string userId)
    {
        var response = await HttpRequest.HttpDelete<OperationSuccessResponse>($"api/users/remove/{userId}", "");

        if (response.Successful)
        {
            users = null;
            await OnInitializedAsync();
            this.StateHasChanged();
        }
        else
        {
            error = response.Error;
        }
    }

    private void UserDetails(string userId)
    {
        NavigationManager.NavigateTo($"users/user/{userId}");
    }
}
