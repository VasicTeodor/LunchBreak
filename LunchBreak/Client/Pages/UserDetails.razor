@page "/users/user/{userId}"
@inject IHttpRequest HttpRequest
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<section>
    <div class="container-fluid">
        <div class="row mb-5">
            <div class="col col-xl-10 col-lg-9 col-md-8 ml-auto">
                <div class="row align-items-center">
                    <div class="col-xl-12 col-12">
                        <div class="row my-2 pt-md-5 mt-md-3">
                            <div class="col">
                                <h2>User Details</h2>
                            </div>
                        </div>
                        @if (user != null)
                        {
                            <div class="row justify-content-center">
                                <div class="font-weight-bold text-center">
                                    @if(UserId == CurrentUserId)
                                    {
                                        <button class="btn btn-secondary mr-2" @onclick="@(() => Edit())">Edit Data</button>
                                    }
                                    <button class="btn btn-secondary" @onclick="@Cancel">Back</button>
                                </div>
                            </div>
                            <div class="row justify-content-center">
                                <div class="col-8">
                                    <div class="text-left">
                                        <p class="mb-0">User Real Name: <strong>@user.Name</strong></p>
                                        <p class="mb-0">Username: <strong>@user.Username</strong></p>
                                        <p class="mb-0">Email: <strong>@user.Email</strong></p>
                                        <p class="mb-0">User ID: <strong>@user.Id</strong></p>
                                        <p class="mb-0">User Team ID: <strong>@user.TeamId</strong></p>
                                    </div>

                                </div>
                            </div>

                            
                            <hr />
                            <div class="row justify-content-center">
                                <div class="col-8">
                                    <h5 class="text-center">Add User To Team:</h5>
                                    <div class="card card-body text-center">
                                        <EditForm Model="@user" OnSubmit="@HandleValidSubmit">
                                            <div class="form-group">
                                                <label for="teamid">User Team ID:</label>
                                                <InputText type="text" class="form-control" id="teamid" @bind-Value="user.TeamId" />
                                            </div>
                                            <hr />
                                            <div class="text-danger text-center">
                                                <label>@error</label>
                                            </div>
                                            <div class="font-weight-bold text-center">
                                                <button type="submit" class="btn btn-primary mr-2">Save Change</button>
                                            </div>
                                        </EditForm>
                                    </div>
                                </div>
                            </div>
                            <hr />
                        }
                        else
                        {
                            <div class="row justify-content-center">
                                <div class="col-8">
                                    <h4 class="text-center">Loading...</h4>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    [Parameter]
    public string UserId { get; set; }
    private string CurrentUserId { get; set; }
    private string error = null;

     private UserRegisterDTO user;

    protected override async Task OnInitializedAsync()
    {
        CurrentUserId = await AuthService.GetUserId();
        var response = await HttpRequest.HttpGet<GetUser>($"api/users/user/{UserId}");

        if (response.Successful)
        {
            user = response.User;
        }
        else
        {
            error = response.Error;
        }
    }

    private async void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
        var response = await HttpRequest.HttpPut<OperationSuccessResponse>("api/users/", user);
        Console.WriteLine(response.Successful);
        if (response.Successful)
        {
            Console.WriteLine("Hello");
        }
        else
        {
            error = response.Error;
        }

    }

    private void Edit()
    {
        NavigationManager.NavigateTo("profile/edit");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("users");
    }
}
