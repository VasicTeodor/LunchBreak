@page "/users/user/{userId}"
@inject IHttpRequest HttpRequest
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IAlertify Alertify

<section>
    <div class="container-fluid">
        <div class="row mb-5">
            <div class="col col-xl-10 col-lg-9 col-md-8 ml-auto">
                <div class="row align-items-center">
                    <div class="col-xl-12 col-12">
                        <div class="row my-2 pt-md-5 mt-md-3">
                            <div class="col">
                                <h2>User Details</h2>
                            </div>
                        </div>
                        @if (user != null)
                        {
                            <div class="row justify-content-center">
                                <div class="font-weight-bold text-center">
                                    @if (UserId == CurrentUserId)
                                    {
                                        <button class="btn btn-secondary mr-2" @onclick="@(() => Edit())">Edit Data</button>
                                    }
                                    @if (isAdmin && user.Approved)
                                    {
                                        <button class="btn btn-secondary mr-2" @onclick="@(() => ApproveUser(UserId, true))">Approve User</button>
                                    }
                                    @if (isAdmin && !user.Approved)
                                    {
                                        <button class="btn btn-secondary mr-2" @onclick="@(() => ApproveUser(UserId, false))">Disapprove User</button>
                                    }
                                    <button class="btn btn-secondary" @onclick="@Cancel">Back</button>
                                </div>
                            </div>
                            <div class="row justify-content-center">
                                <div class="col-8">
                                    <div class="text-left">
                                        @if (user.Approved)
                                        {
                                            <p class="mb-0">User Account is: <strong class="text-success">Approved</strong></p>
                                        }
                                        else
                                        {
                                            <p class="mb-0">User Account is: <strong class="text-danger">Not Approved</strong></p>
                                        }
                                        <p class="mb-0">User Real Name: <strong>@user.Name</strong></p>
                                        <p class="mb-0">Username: <strong>@user.Username</strong></p>
                                        <p class="mb-0">Email: <strong>@user.Email</strong></p>
                                        <p class="mb-0">User ID: <strong>@user.Id</strong></p>
                                        <p class="mb-0">User Team ID: <strong>@user.TeamId</strong></p>
                                        <p class="mb-0">Profile Picture:</p>
                                        <img class="border-dark" src="@profileImg" alt="profileImage" style="width: 200px; height: 200px" />
                                        <p class="mb-0">Document Identification:</p>
                                        <img class="border-dark" src="@documentImg" alt="documentImage" style="width: 330px; height: 200px" />
                                    </div>

                                </div>
                            </div>


                            @if (isEditor)
                            {
                            <hr />
                                <div class="row justify-content-center">
                                    <div class="col-8">
                                        <h5 class="text-center">Add User To Team:</h5>
                                        <div class="card card-body text-center">
                                            <EditForm Model="@user" OnSubmit="@HandleValidSubmit">
                                                <div class="form-group">
                                                    <label for="teamid">User Team ID:</label>
                                                    <InputText type="text" class="form-control" id="teamid" @bind-Value="user.TeamId" />
                                                </div>
                                                <hr />
                                                <div class="text-danger text-center">
                                                    <label>@error</label>
                                                </div>
                                                <div class="font-weight-bold text-center">
                                                    <button type="submit" class="btn btn-primary mr-2">Save Change</button>
                                                </div>
                                            </EditForm>
                                        </div>
                                    </div>
                                </div>
                            <hr />
                            }
                        }
                        else
                        {
                            <div class="row justify-content-center">
                                <div class="col-8">
                                    <h4 class="text-center">Loading...</h4>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    [Parameter]
    public string UserId { get; set; }
    private string CurrentUserId { get; set; }
    private string error = null;
    private bool isEditor = false;
    private bool isAdmin = false;
    private string profileImg = "images/avatar.png";
    private string documentImg = "images/document.png";

    private UserRegisterDTO user;

    protected override async Task OnInitializedAsync()
    {
        CurrentUserId = await AuthService.GetUserId();

        isEditor = await AuthService.IsUserEditor();
        isAdmin = await AuthService.IsUserEditor();

        var response = await HttpRequest.HttpGet<GetUser>($"api/users/user/{UserId}","");

        if(response != null)
        {
            if (response.Successful)
            {
                user = response.User;
                if (!string.IsNullOrEmpty(user.ProfilePicture.Data))
                {
                    profileImg = $"data:image/{user.ProfilePicture.Type};base64,{user.ProfilePicture.Data}";
                }
                if (!string.IsNullOrEmpty(user.DocumentPicture.Data))
                {
                    documentImg = $"data:image/{user.DocumentPicture.Type};base64,{user.DocumentPicture.Data}";
                }
            }
            else
            {
                error = response.Error;
                this.StateHasChanged();
            }
        }
        else
        {
            await Alertify.Error("There was an error");
        }
    }

    private async void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
        var response = await HttpRequest.HttpPut<OperationSuccessResponse>("api/users/", user);

        if(response != null)
        {
            if (response.Successful)
            {
                await Alertify.Success("Successfuly added user to team");
            }
            else
            {
                error = response.Error;
                this.StateHasChanged();
            }
        }
        else
        {
            await Alertify.Error("There was an error");
        }

    }

    private async Task ApproveUser(string userId, bool approve)
    {
        var response = await HttpRequest.HttpPut<OperationSuccessResponse>($"api/admin/approveuser?userId={userId}&approve={approve}","");

        if (response != null)
        {
            if (response.Successful)
            {
                user = null;
                await Alertify.Success("User account approved");
                await OnInitializedAsync();
                this.StateHasChanged();
            }
            else if(!response.Successful)
            {
                user = null;
                await Alertify.Success("User account rejected");
                await OnInitializedAsync();
                this.StateHasChanged();
            }
            else
            {
                if (!string.IsNullOrEmpty(response.Error))
                {
                    error = response.Error;
                    this.StateHasChanged();
                }
            }
        }
        else
        {
            await Alertify.Error("There was an error");
        }
    }

    private void Edit()
    {
        NavigationManager.NavigateTo("profile/edit");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("users");
    }
}
