@inherits LayoutComponentBase
@using LunchBreak.Client.Services
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject IAuthService AuthService
@inject IHttpRequest HttpRequest
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (logedin || !(string.IsNullOrEmpty(jwt)))
{
    <NavMenu />
    @Body
    <DashboardFooter></DashboardFooter>
}
else
{
    <nav class="navbar navbar-expand-md navbar-light bg-dark fixed-top">
        <a href="#" class="navbar-brand">
            <i class="fas fa-child text-warning fa-2x"></i>
        </a>
        <button type="button"
                class="navbar-toggler bg-light"
                data-toggle="collapse"
                data-target="#nav">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div id="nav" class="collapse navbar-collapse justify-content-between">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <NavLink class="nav-link text-light text-uppercase text-bold px-3"
                       href="#about">About us</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-light text-uppercase text-bold px-3"
                       href="#lunch">Lunch break</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-light text-uppercase text-bold px-3"
                       href="#grades">Our users</NavLink>
                </li>
            </ul>

            <form class="form-inline ml-3">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search" />
                    <div class="input-group-append">
                        <button type="button" class="btn">
                            <i class="fas fa-search text-muted"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </nav>
    <!-- end of navbar -->
    <!-- ==================================================================================== -->
    <!-- banner -->
    <section>
        <div class="container-fluid">
            <div class="row bg-info justify-content-center align-items-center"
                 style="height: 100vh">
                <div class="col-sm-10 text-center">
                    <h1 class="display-2 text-capitalize">
                        <span class="text-warning">Pure Bootstrap</span>
                        <span class="text-white font-weight-bold">website</span>
                    </h1>
                    <h2 class="font-weight-light font-italic text-light">
                        Lorem ipsum dolor sit amet consectetur adipisicing elit.
                    </h2>
                    <button type="button" class="btn btn-warning btn-lg px-4 m-3" data-toggle="modal" data-target="#modalRegister">Register</button>
                    <button type="button" class="btn btn-danger btn-lg px-4 m-3" data-toggle="modal" data-target="#modalLogin">Login</button>
                </div>
            </div>
        </div>
    </section>
    <!-- end of banner -->
    <!-- ==================================================================================== -->
    <!-- Modal Login -->
    <div class="modal fade" id="modalLogin" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@loginData" OnValidSubmit="@HandleLoginSubmit">
                        <div class="form-group">
                            <label for="usernameLogin">Username:</label>
                            <InputText type="text" class="form-control" id="usernameLogin" @bind-Value="loginData.Username" />
                        </div>
                        <div class="form-group">
                            <label for="passwordLogin">Password:</label>
                            <InputText type="password" class="form-control" id="passwordLogin" @bind-Value="loginData.Password" />
                        </div>
                        <label class="text-danger text-center text-capitalize">@loginError</label>
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Login</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
    <!-- end of modal login -->
    <!-- ==================================================================================== -->
    <!-- Modal Register -->
    <div class="modal fade" id="modalRegister" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@newUser" OnValidSubmit="@HandleValidSubmit">

                        <div class="form-group">
                            <label for="name">Name:</label>
                            <InputText type="text" class="form-control" id="name" @bind-Value="newUser.Name" />
                        </div>
                        <div class="form-group">
                            <label for="email">Email address:</label>
                            <InputText type="email" class="form-control" id="email" @bind-Value="newUser.Email" />
                        </div>
                        <div class="form-group">
                            <label for="username">Username:</label>
                            <InputText type="text" class="form-control" id="username" @bind-Value="newUser.Username" />
                        </div>
                        <div class="form-group">
                            <label for="pwd">Password:</label>
                            <InputText type="password" class="form-control" id="pwd" @bind-Value="newUser.Password" />
                        </div>
                        <div class="form-group">
                            <label for="pwdRpt">Password:</label>
                            <InputText type="password" class="form-control" id="pwdRpt" @bind-Value="newUser.ConfirmPassword" />
                        </div>
                        <div class="text-danger">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                        </div>
                        <div class="modal-footer font-weight-bold">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Register</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
    <!-- end of modal register -->
    <!-- ==================================================================================== -->
    <AboutUs></AboutUs>
    <WhatWeProvide></WhatWeProvide>
    <TheySaidAboutUs></TheySaidAboutUs>
    <CustomFooter></CustomFooter>
}


@code {
    string jwt = null;
    bool logedin = false;
    string registerError = "";
    string loginError = "";

    private UserRegisterDTO newUser = new UserRegisterDTO();
    private LoginData loginData = new LoginData();

    private async void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
        var response = await AuthService.Register(newUser);
        //var response = await HttpRequest.HttpPost<RegisterResult>("api/authorization/register", newUser);
        Console.WriteLine(response.Successful);
        if (response.Successful)
        {
            var loginResult = await AuthService.Login(new LoginData() { Username = newUser.Username, Password = newUser.Password });
            if (loginResult.Successful)
            {
                logedin = true;
                await JsRuntime.InvokeVoidAsync("CloseModalBackground");
                this.StateHasChanged();
            }
        }
        else
        {
            if (response.Errors.Count() != 0)
                registerError = response.Errors.ToList()[0];
        }

    }

    private async void HandleLoginSubmit()
    {
        Console.WriteLine("onLoginData");
        var result = await AuthService.Login(loginData);
        if (result.Successful)
        {
            logedin = true;
            await JsRuntime.InvokeVoidAsync("CloseModalBackground");
            this.StateHasChanged();
        }
        else
        {
            loginError = result.Error;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        jwt = await localStorage.GetItemAsync<string>("authToken");
        //await localStorage.SetItemAsync("name", "John Smith");
        //var name = await localStorage.GetItemAsync<string>("name");
    }

}